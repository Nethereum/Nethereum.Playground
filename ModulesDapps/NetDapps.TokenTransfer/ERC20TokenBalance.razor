@inherits TokenBalanceBase
@using Microsoft.AspNetCore.Components
@using Nethereum.Contracts.Standards.ERC20.TokenList
@using System.Numerics
@using Nethereum.Web3
@using System.Globalization


<div class="form-group">
    <label for="url">Url</label>
    <input type="text" class="form-control" id="urlInput" aria-describedby="urlHelp" placeholder="Enter rpc url" @bind="@RpcUrl" />
    <small id="urlHelp" class="form-text text-muted">The rpc url</small>
</div>
<div class="form-group">
    <label for="contractAddresInput">Contract Address/addresses</label>
    <input type="text" class="form-control" id="contractAddresInput" aria-describedby="contractAddressHelp" placeholder="Enter the contract address" @bind="@ContractAddresses" />
    <small id="contractAddressHelp" class="form-text text-muted">The contract address or addresses comma separated</small>
</div>

<div class="form-group">
    <label for="accountAddresInput">Account Address</label>
    <input type="text" class="form-control" id="accountAddresInput" aria-describedby="accountAddressHelp" placeholder="Enter the account address" @bind="@AccountAddresses" />
    <small id="accountAddressHelp" class="form-text text-muted">The account address or addresses comma separated</small>
</div>



<button type="submit" class="btn btn-primary" @onclick="@GetTokenBalance">Get Token(s) Balance(s)</button>

@if (TokenOwnerBalances != null)
{
    <br />
    //<h2>Total: @TokenOwnerBalances..Sum( x => x.Value).ToString("c", LocalFormat)</h2>
    //<h3>Account: <a href="https://etherscan.io/address/@checkingBalanceAccount" target="_blank">@checkingBalanceAccount</a></h3>
    <br />

    <table class="table">
        <thead>
        <tr>
            <th>Token</th>
            <th>Total Balance</th>
            <th>Owner</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var token in TokenOwnerBalances)
        {
            <tr>
                <td><a href="https://etherscan.io/token/@token.Token.Address" target="_blank"><img src="@token.Token.LogoURI" width="40" height="40" /> @token.Token.Name</a></td>
                <td>@ConvertToFormattedDecimal(token.Token, token.GetTotalBalance())</td>
                @if (token.OwnersBalances.Count > 1)
                {
                    <td>
                    @foreach (var ownerBalance in token.OwnersBalances)
                    {
                        <div>@ownerBalance.Owner Balance: @ConvertToFormattedDecimal(token.Token, ownerBalance.Balance)</div>
                    }
                    </td>
                }
                else
                {
                    <td>
                        <div>@token.OwnersBalances[0].Owner </div>
                    </td>
                }
            </tr>
        }
        </tbody>
    </table>

}

@code{

    public string ConvertToFormattedDecimal(Token token, BigInteger balance)
    {
        return Web3.Convert.FromWei(balance, token.Decimals).ToString(CultureInfo.InvariantCulture);
    }

}