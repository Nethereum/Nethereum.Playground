@page "/netdappmodules"
@using Microsoft.AspNetCore.Components
@using NetDapps.Assemblies
@inherits DappModulesViewModel

<div class="card">
<div class="card-header">
    <h5>
        Nethereum Playground NetDapp Modules
    </h5>
    <div class="sub-content"> The netdapp modules are dynamic components loaded from IPFS</div>
</div>
<div class="card-body">
    <div class="input-group m-2 row justify-content-end">
        <div class="input-group-prepend">
            <div class="input-group-text" id="selectCodeSample">Select module:</div>
        </div>
        <select id="selectCodeSample" class="form-control col-sm-7" @onchange="@UIComponentChanged">
            @for (int i = 0; i < UIComponentsInfo.Count; i++)
                    {
                        if (i == @SelectedUIComponentInfo)
                        {
            <option value="@i" selected>@GetDisplayTitle(UIComponentsInfo[i])</option>
                        }
                        else
                        {
            <option value="@i">@GetDisplayTitle(UIComponentsInfo[i])</option>

                        }
                    }
        </select>
       <!-- <button class="btn btn-secondary ml-1" @onclick="@LoadSelected">Load</button> -->
    </div>
    </div>

@if (CurrentComponent != null)
{
    <div class="card m-2">
        <div class="card-header">
            <h5>@LoadedTitle</h5>
        </div>
        @foreach (var component in LoadedComponents)
        {
            <div class="card-body" @key="component.Key" style="@GetVisibility(component.Key)">
                @component.Value
            </div>
        }
     </div>
}
</div>

@code
{
    public string GetVisibility(int id)
    {
        if (id != SelectedUIComponentInfo)
        {
            return "display: none";
        }
        return "display:block";
    }
}
