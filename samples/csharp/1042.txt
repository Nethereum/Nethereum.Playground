using System;
using System.Numerics;
using Nethereum.Web3;
using Nethereum.Web3.Accounts;
using Nethereum.Util;
using System.Threading.Tasks;
using NBitcoin;
using Nethereum.Hex.HexConvertors.Extensions;
using Nethereum.HdWallet;

public class Program
{
    private static async Task Main(string[] args)
    {
        // This samples shows how to generate a mneumonic (word list) to use in an Hd Wallet.
        // 
        // A backup seed sentence is a human friendly way to recover all the generated addresses, 
        // since Hd Wallets generate addresses deterministically, we can now regenerate them at 
        // anytime using our seed sentence and retrieve them using an index number.
        //
        // For example generate the 12 words of Metamask.
        // 
        //Nethereum uses internally NBitcoin to derive the private and public keys, for more information on bip32 please check
        //https://programmingblockchain.gitbook.io/programmingblockchain/key_generation/bip_32

        var mnemonic = new NBitcoin.Mnemonic(Wordlist.English, WordCount.Twelve);
        Console.WriteLine("The 12 seed words are: " + mnemonic.ToString());

        var password = "password";
        var wallet = new Wallet(mnemonic.ToString(), password);
        var account = wallet.GetAccount(0);
        Console.WriteLine("Address at Index 0 is: " + account.Address + " with private key:" + account.PrivateKey);
    }
}