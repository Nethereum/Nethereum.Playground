using System;
using System.Numerics;
using System.Threading.Tasks;
using Nethereum.Web3;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Contracts;

public class Program
{
    // This example demonstrates how to get the balance for an ERC721 (non-fungible) token,
    // and also how to find out who the owner is for a given token.
    // The ERC721 standard is here: https://eips.ethereum.org/EIPS/eip-721
    // The ERC721 token we use in the example is for the "PatchworkKingdoms (PWKD)" charity https://www.patchwork-kingdoms.com/.
    // It is deployed on mainnet here:
    // https://etherscan.io/address/0xd24a7c412f2279b1901e591898c1e96c140be8c5

    //The contract definition abi is created in different FunctionMessages enabling type safe interaction
    // The balance function message definition    
    [Function("balanceOf", "uint256")]
    public class BalanceOfFunction : FunctionMessage
    {
        [Parameter("address", "owner", 1)] 
        public string Owner { get; set; }
    }
    
    // The owner function message definition
    [Function("ownerOf", "address")]
    public class OwnerOfFunction : FunctionMessage
    {
        [Parameter("uint256", "tokenId", 1)]
        public BigInteger TokenId { get; set; }
    }

    //async Task Main to enable async methods
    private static async Task Main(string[] args)
    {         
        // Connect to Ethereum mainnet using Infura
        var web3 = new Web3("https://mainnet.infura.io/v3/ddd5ed15e8d443e295b696c0d07c8b02");

        // The ERC721 contract we will be querying
        var erc721TokenContractAddress = "0xd24a7c412f2279b1901e591898c1e96c140be8c5";

        // Example 1. Get balance of an account. This is the count of tokens that an account 
        // has from a specified contract (in this case "Gods Unchained").  
        var accountWithSomeTokens = "0xCbf94Fcb7CeaF7b61F20560eED8e0DBC4E407F5C";
        // You can check the token balance of the above account on etherscan:
        //https://etherscan.io/token/0xd24a7c412f2279b1901e591898c1e96c140be8c5?a=0xcbf94fcb7ceaf7b61f20560eed8e0dbc4e407f5c


        // Send query to contract, to find out how many tokens the owner has
        var balanceOfMessage = new BalanceOfFunction() { Owner = accountWithSomeTokens };
        var queryHandler = web3.Eth.GetContractQueryHandler<BalanceOfFunction>();
        var balance = await queryHandler
            .QueryAsync<BigInteger>(erc721TokenContractAddress, balanceOfMessage)
            .ConfigureAwait(false);
        Console.WriteLine($"Address: {accountWithSomeTokens} holds: {balance}");
        
        
        // Example 2. Find a token's owner.             
        var sampleTokenId = 737;
              
        var ownerOfMessage = new OwnerOfFunction() { TokenId = sampleTokenId };
        var queryHandler2 = web3.Eth.GetContractQueryHandler<OwnerOfFunction>();
        var tokenOwner = await queryHandler2
            .QueryAsync<string>(erc721TokenContractAddress, ownerOfMessage)
            .ConfigureAwait(false);
        Console.WriteLine($"Address: {tokenOwner} owns token id: {sampleTokenId}")
    }
}